# https://medium.com/swlh/how-to-run-locally-built-docker-images-in-kubernetes-b28fbc32cc1d

# To run local Docker image in Kubernetes:
# eval $(minikube -p minikube docker-env)
# docker-compose -f "tests/PublicApiService.IntegrationTests/docker-compose.yml" up --detach --no-build
# docker build --network=musicfeed-test-network -t musicfeed/api-service:latest -f "src/PublicApiService/Dockerfile" .
# kubectl create -f "../musicfeed-updates-service.git/deploy/updates-service.yaml" -f "deploy/api-service.dev.yaml"
# kubectl port-forward service/api-service 8080:80
# kubectl delete -f "../musicfeed-updates-service.git/deploy/updates-service.yaml" -f "deploy/api-service.dev.yaml"

apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    app: api-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: api-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  labels:
    app: api-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      containers:
        - name: api-service
          image: musicfeed/api-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /health/live
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
